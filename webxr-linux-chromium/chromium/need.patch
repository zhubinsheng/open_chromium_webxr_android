diff --git a/device/vr/public/mojom/vr_service.mojom b/device/vr/public/mojom/vr_service.mojom
index 66df27a914d3b..0e59ff5f63b92 100644
--- a/device/vr/public/mojom/vr_service.mojom
+++ b/device/vr/public/mojom/vr_service.mojom
@@ -1173,7 +1173,6 @@ interface XRPresentationProvider {
 
   // XRPresentationTransportMethod SUBMIT_AS_TEXTURE_HANDLE
   // |texture| should only be used after |sync_token| has passed.
-  [EnableIf=is_win]
   SubmitFrameWithTextureHandle(int16 frameId, handle<platform> texture,
                                gpu.mojom.SyncToken sync_token);
 


   virtual bool IsUsingSharedImages() const;
 








diff --git a/third_party/blink/renderer/platform/graphics/gpu/xr_frame_transport.cc b/third_party/blink/renderer/platform/graphics/gpu/xr_frame_transport.cc
index f8b203fee866d..11ea9165a5d89 100644
--- a/third_party/blink/renderer/platform/graphics/gpu/xr_frame_transport.cc
+++ b/third_party/blink/renderer/platform/graphics/gpu/xr_frame_transport.cc
@@ -98,6 +98,8 @@ void XRFrameTransport::FrameSubmitMissing(
   vr_presentation_provider->SubmitFrameMissing(vr_frame_id, sync_token);
 }
 
+uint8_t* pixelsBuffer = nullptr;
+
 void XRFrameTransport::FrameSubmit(
     device::mojom::blink::XRPresentationProvider* vr_presentation_provider,
     gpu::gles2::GLES2Interface* gl,
@@ -110,12 +112,34 @@ void XRFrameTransport::FrameSubmit(
   if (transport_options_->transport_method ==
       device::mojom::blink::XRPresentationTransportMethod::
           SUBMIT_AS_TEXTURE_HANDLE) {
-#if BUILDFLAG(IS_WIN)
+
     TRACE_EVENT0("gpu", "XRFrameTransport::CopyImage");
     // Update last_transfer_succeeded_ value. This should usually complete
     // without waiting.
     if (transport_options_->wait_for_transfer_notification)
       WaitForPreviousTransfer();
+
+    // HACK
+    int width = image_ref->width();
+    int height = image_ref->height();
+    LOG(INFO) << "Dimensions: " << width << "x" << height;
+    if(!pixelsBuffer) {
+      pixelsBuffer = (uint8_t*)malloc(width * height * 4);
+    }
+    //gl->ReadPixels(0, 0, width, height, GL_RGBA, GL_UNSIGNED_BYTE, pixelsBuffer);
+    //LOG(INFO) << "Top-left " << pixelsBuffer[0] << " " << pixelsBuffer[1] << " " << pixelsBuffer[2];
+
+    // FIXME: Is this needed?
+    drawing_buffer_client->DrawingBufferClientRestoreTexture2DBinding();
+    drawing_buffer_client->DrawingBufferClientRestoreFramebufferBinding();
+    drawing_buffer_client->DrawingBufferClientRestoreRenderbufferBinding();
+
+    if(1 == 1) {
+      FrameSubmitMissing(vr_presentation_provider, gl, vr_frame_id);
+      return;
+    }
+
+#if BUILDFLAG(IS_WIN)
     if (!frame_copier_ || !last_transfer_succeeded_) {
       frame_copier_ = std::make_unique<GpuMemoryBufferImageCopy>(gl, sii);
     }
@@ -143,8 +167,6 @@ void XRFrameTransport::FrameSubmit(
     vr_presentation_provider->SubmitFrameWithTextureHandle(
         vr_frame_id, mojo::PlatformHandle(std::move(gpu_handle.dxgi_handle)),
         sync_token);
-#else
-    NOTIMPLEMENTED();
 #endif
   } else if (transport_options_->transport_method ==
              device::mojom::blink::XRPresentationTransportMethod::
-- 
2.37.1

